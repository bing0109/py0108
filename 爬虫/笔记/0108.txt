昨日回顾



爬虫基础知识
    1、http过程：请求过程、响应过程
    


2、urllib请求库
    urllib.request  请求模块，执行请求的操作
    urllib.parse    解析url（编码、拆分、合并）
    urllib.error    异常处理

    2.1 urllib.request
        1、response = urllib.request.urlopen(url, data=None, timeout)        执行请求
            url     可以输入str，即请求的url；还可以输入Request对象
            data    请求体，只能接受Bytes类型的数据，如果是None，那就是get请求，不为空就是post请求。
            timeout 超时的设置，单位是秒
            response是接收到的HttpResponse对象
        2、urllib.request.Request(url, data=None,headers={},method)
            Request对象，可以方便添加请求头
            headers 请求头，可以接收字典格式
            method  请求方式，如果data=None，默认是get请求
        
    2.2 获得响应
        response=urllib.request.Request(url, data=None,headers={},method)
            是接收到的HttpResponse对象
        response.read() 读取响应体，返回的是二进制
        response.read().decode('utf8')  返回的是字符串
        response.status 获取状态码
        response.getheaders()   获取响应头
        response.getheader('name')  获取响应头中的某个字符串


    2.3 urllib.parse
        urllib.parse.urlencode(dict)    url编码，输入是字典
        urllib.parse.quote(str)     url编码，输入的是字符串
        urllib.parse.unquote(str)   url反编码

    2.4 urllib.error
        urllib.error.URLError
        urllib.error.HTTPError  是URLError的子类
        进行异常捕获的时候，一般是先子类，后父类；先子类可获取更细分的处理




request




































